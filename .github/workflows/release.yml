name: Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version type (patch, minor, major)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_TOKEN }}
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Configure Git
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
      
      - name: Generate changelog and bump version
        run: |
          npm run release -- --release-as ${{ github.event.inputs.version_type }} --skip.tag
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
        shell: /usr/bin/bash -e {0}
        env:
          NPM_CONFIG_USERCONFIG: /home/runner/work/_temp/.npmrc
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Create Git tag
        run: |
          git tag -a v${{ env.NEW_VERSION }} -m "Release v${{ env.NEW_VERSION }}"
      
      - name: Push changes to GitHub
        run: |
          # Set remote URL with PAT for push permissions
          git remote set-url origin https://${{ secrets.RELEASE_TOKEN }}@github.com/${{ github.repository }}.git
          git push --follow-tags origin main
        shell: /usr/bin/bash -e {0}
        env:
          NPM_CONFIG_USERCONFIG: /home/runner/work/_temp/.npmrc
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NEW_VERSION: ${{ env.NEW_VERSION }}
      
      - name: Build library
        run: npm run build
      
      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: v${{ env.NEW_VERSION }}
          release_name: Release v${{ env.NEW_VERSION }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false